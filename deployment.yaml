---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "test-api-roald1"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    role: "api1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "test-api-roald"
      component: "cool-component"
      role: "api1"
  strategy:
    rollingUpdate:
      maxSurge: 150%
      maxUnavailable: 60%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: "test-api-roald"
        component: "cool-component"
        role: "api1"
    spec:
      nodeSelector:
        node-pool-group: standard
      tolerations:
        - key: node-pool-group
          operator: Equal
          value: standard
          effect: NoSchedule
      containers:
        - name: fun-api
          image: eu.gcr.io/nube-hub/roald-api:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 350m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "test-api-roald-service1"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    role: "api1"
spec:
  ports:
    - name: metrics
      port: 8000
      targetPort: http
      protocol: TCP
  selector:
    app: "test-api-roald"
    component: "cool-component"
    role: "api1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "test-api-roald2"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    role: "api2"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "test-api-roald"
      component: "cool-component"
      role: "api2"
  strategy:
    rollingUpdate:
      maxSurge: 200%
      maxUnavailable: 60%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: "test-api-roald"
        component: "cool-component"
        role: "api2"
    spec:
      nodeSelector:
        node-pool-group: standard
      tolerations:
        - key: node-pool-group
          operator: Equal
          value: standard
          effect: NoSchedule
      containers:
        - name: fun-api
          image: eu.gcr.io/nube-hub/roald-api:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 350m
              memory: 128Mi
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sleep", "5" ]
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "test-api-roald-service2"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    role: "api2"
spec:
  ports:
    - name: metrics
      port: 8000
      targetPort: http
      protocol: TCP
  selector:
    app: "test-api-roald"
    component: "cool-component"
    role: "api2"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "test-api-roald3"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    role: "api3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "test-api-roald"
      component: "cool-component"
      role: "api3"
  strategy:
    rollingUpdate:
      maxSurge: 150%
      maxUnavailable: 60%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: "test-api-roald"
        component: "cool-component"
        role: "api3"
    spec:
      nodeSelector:
        node-pool-group: standard
      tolerations:
        - key: node-pool-group
          operator: Equal
          value: standard
          effect: NoSchedule
      containers:
        - name: fun-api
          image: eu.gcr.io/nube-hub/roald-api:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 350m
              memory: 128Mi
#          livenessProbe:
#            httpGet:
#              path: /health
#              port: http
#              scheme: HTTP
#            initialDelaySeconds: 0
#            timeoutSeconds: 1
#          readinessProbe:
#            httpGet:
#              path: /ready
#              port: http
#              scheme: HTTP
#            initialDelaySeconds: 0
#            timeoutSeconds: 1
#            successThreshold: 1
#            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "test-api-roald-service3"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    role: "api3"
spec:
  ports:
    - name: metrics
      port: 8000
      targetPort: http
      protocol: TCP
  selector:
    app: "test-api-roald"
    component: "cool-component"
    role: "api3"
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: test-api-roald-monitor
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
spec:
  selector:
    matchLabels:
      app: "test-api-roald"
      component: "cool-component"
  endpoints:
  - port: metrics
    honorLabels: true
    interval: 5s
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app: "test-api-roald"
    component: "cool-component"
  name: test-api-roald-policy
  namespace: infra
spec:
  ingress:
  - ports:
    - port: 8000
      protocol: TCP
  podSelector:
    matchLabels:
      app: "test-api-roald"
      component: "cool-component"
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "test-api-ingress"
  namespace: "infra"
  labels:
    app: "test-api-roald"
    component: "cool-component"
    owner: roald
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "40m"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-response-headers: X-User-ID,X-User-Email,X-User,X-User-Locale,X-User-Groups
    nginx.ingress.kubernetes.io/auth-url: http://auth.ingress.svc.cluster.local/auth
    nginx.ingress.kubernetes.io/auth-signin: https://auth.dev.nube.tech/signin?redirect=https://roaldapi.dev.nube.tech$escaped_request_uri
spec:
  rules:
  - host: roaldapi.dev.nube.tech
    http:
      paths:
      - path: "/"
        pathType: ImplementationSpecific
        backend:
          service:
            name: "test-api-roald-service1"
            port:
              number: 8000
  tls:
  - hosts:
    - roaldapi.dev.nube.tech
    secretName: roald-api-secret
